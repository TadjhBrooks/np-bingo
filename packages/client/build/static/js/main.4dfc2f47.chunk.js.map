{"version":3,"sources":["Config/socket.io.ts","Constants/index.ts","Utils/index.ts","Utils/bingo.ts","Components/Ball/index.tsx","Reducers/app.reducer.ts","Config/features.ts","Utils/contexts.ts","Components/Status/index.tsx","Components/DialogTitle/index.tsx","Utils/custom-hooks.ts","Components/Share/index.tsx","Components/Code/index.tsx","Components/Footer/index.tsx","Components/Draws/index.tsx","Components/PlayerList/index.tsx","Views/Host/index.tsx","Components/Cell/index.tsx","Components/Logo/index.tsx","Reducers/play.reducer.ts","Components/Board/index.tsx","Views/Play/index.tsx","Components/DialogCode/index.tsx","Views/Home/index.tsx","Components/RoomList/index.tsx","Views/Join/index.tsx","Views/Create/index.tsx","Config/axios.ts","Api/index.ts","App.tsx","reportWebVitals.ts","index.tsx","../../common/index.js"],"names":["socket","io","process","SERVER","withCredentials","on","console","log","BINGO","letters","INIT_GAME","READY_CHECK","STANDBY","START_GAME","VALIDATE","PAUSE","FAILURE","WIN_GAME","END_GAME","SET_ROOM","JOIN_ROOM","PLAYER_JOINED","PLAYER_LEFT","PLAYER_KICKED","PLAYER_READY","PLAYER_UNREADY","NEW_CARD","UPDATE_CROSSMARKS","INIT_CROSSMARKS","WINNER_CROSSMARKS","GET_CARD","CHECK_CARD_SUCCESS","CHECK_CARD_FAILURE","NEW_BALL","SET_BALL","UPDATE_GAMEMODE","LOOP_START","LOOP_STOP","randomIndex","array","Math","floor","random","length","handleError","error","response","data","status","headers","request","message","config","createColumn","i","column","values","index","value","filter","item","serializeCard","card","splice","serial","lz","compressToBase64","compressSerial","join","validateCard","draws","results","row","diagonal","rowResults","result","checkCellsInRow","checkRows","columnResults","checkCellsInColumn","checkColumns","diagonalResults","checkFallingDiagonal","checkRisingDiagonal","checkDiagonals","offset","flag","push","findCommonElements","search","some","includes","Ball","number","remainder","loop","progress","disabled","className","Badge","color","badgeContent","overlap","CircularProgress","size","variant","initialState","gamestate","room","host","_id","uid","name","ball","key","players","pool","playerCard","Array","owner","winner","methods","player","kicked","rules","mode","special","reducer","state","action","type","payload","leaveFiltered","element","readyFiltered","map","ready","unreadyFiltered","Error","GameContext","React","createContext","BallContext","FeautresContext","features","statusText","text","hostStatusText","count","Status","Typography","DialogTitle","withStyles","theme","createStyles","closeButton","position","right","spacing","top","children","classes","onClose","props","disableTypography","IconButton","aria-label","onClick","useForm","callback","useState","inputs","setInputs","errors","setErrors","event","persist","target","preventDefault","maxStringLength","paste","clipboardData","getData","pasteArray","split","pastedInput","useDialog","open","setOpen","Share","setCopyText","handleOpen","handleClose","copyText","ref","useRef","Fragment","Dialog","aria-labelledby","fullWidth","maxWidth","id","DialogContent","DialogContentText","TextField","inputRef","window","location","protocol","DialogActions","Button","current","select","document","execCommand","err","autoFocus","Code","Empty","Object","assign","code","Consumer","Footer","home","align","Link","href","component","RouterLink","to","Draws","letter","table","itemsInit","items","j","PlayerList","onRemove","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","ListItemSecondaryAction","edge","useStyles","makeStyles","width","Host","checkCard","newBall","leaveRoom","gameToggle","removePlayer","start","buttonText","gameContext","ButtonGroup","role","ballContext","fontSize","Cell","override","checked","setChecked","prevCheck","Logo","crossmarks","Board","Play","appState","sendCard","standby","init","useReducer","dispatch","newCard","useCallback","x","createCard","clearCrossmarks","useEffect","winningCrossmarks","marks","setWinningCrossmarks","board","handleSendCard","crossmark","aria-describedby","code1","code2","code3","code4","DialogCode","onSumbit","formInputs","toUpperCase","handleChange","handleSubmit","handlePaste","handleChangeText","maxLength","previousSibling","focus","nextSibling","onSubmit","autoComplete","pattern","roomChar","autoCapitalize","onPaste","onChange","required","Home","createRoom","joinRoom","history","useHistory","undefined","RoomList","onJoin","Join","queryRoom","solo","handleSolo","dummyArray","Create","title","useTitle","setType","postage","corners","rovingl","visible","setState","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","label","FormGroup","Checkbox","FormHelperText","Switch","instance","axios","create","baseURL","body","a","post","then","res","catch","put","delete","createMuiTheme","palette","App","query","URLSearchParams","useLocation","user","setUser","setProgress","play","prevUser","emit","username","apiUpdateRoom","apiDeleteRoom","poolArray","drawsArray","columns","getPoolSize","columnIndex","valueIndex","getBall","removeBall","timer","setInterval","prevProgress","clearInterval","timeout","setTimeout","clearTimeout","keys","apiSaveRoom","gamemode","pauseTime","Provider","ThemeProvider","Container","fixed","path","get","exact","apiCreateRoom","game","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","ReactDOM","render","StrictMode","getElementById","defineProperty","exports","roomRegex","roomPattern","makeID","characters","charAt","RegExp"],"mappings":"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","file":"static/js/main.4dfc2f47.chunk.js","sourcesContent":["import { io } from 'socket.io-client';\n\nconst socket = io(process.env.SERVER || 'http://localhost:8082/', {\n  withCredentials: true,\n});\n\nsocket.on('disconnect', () => {\n  console.log('User disconnected');\n});\n\n// TODO Limit reconnectionAttempts\n// TODO Reconnect to room?\n\nexport default socket;\n","export const DEBUG = true;\n\n// Standard Bingo Number Distribution (USA)\nconst _B = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconst _I = [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nconst _N = [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45];\nconst _G = [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60];\nconst _O = [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75];\nexport const BINGO = [_B, _I, _N, _G, _O];\n\nexport const letters = ['b', 'i', 'n', 'g', 'o'];\n\nexport const INIT_GAME = 'INIT GAME';\nexport const READY_CHECK = 'READY CHECK';\nexport const STANDBY = 'STANDBY';\nexport const START_GAME = 'START GAME';\nexport const VALIDATE = 'VALIDATE';\nexport const PAUSE = 'PAUSE';\nexport const FAILURE = 'FAILURE';\nexport const WIN_GAME = 'WIN GAME';\nexport const END_GAME = 'END GAME';\n\nexport const SET_ROOM = 'SET ROOM';\nexport const JOIN_ROOM = 'JOIN ROOM';\nexport const PLAYER_JOINED = 'PLAYER JOINED';\nexport const PLAYER_LEFT = 'PLAYER LEFT';\nexport const PLAYER_KICKED = 'PLAYER KICKED';\nexport const PLAYER_READY = 'PLAYER READY';\nexport const PLAYER_UNREADY = 'PLAYER UNREADY';\n\nexport const NEW_CARD = 'NEW CARD';\nexport const UPDATE_CROSSMARKS = 'UPDATE CROSSMARKS';\nexport const INIT_CROSSMARKS = 'INIT CROSSMARKS';\nexport const WINNER_CROSSMARKS = 'WINNER CROSSMARKS';\n\nexport const GET_CARD = 'GET CARD';\nexport const CHECK_CARD_SUCCESS = 'CHECK CARD SUCCESS';\nexport const CHECK_CARD_FAILURE = 'CHECK CARD FAILURE';\nexport const SET_WINNER = 'SET WINNER';\n\nexport const NEW_BALL = 'NEW BALL';\nexport const SET_BALL = 'SET BALL';\nexport const UPDATE_POOL = 'UPDATE POOL';\n\nexport const UPDATE_GAMEMODE = 'UPDATE GAMEMODE';\nexport const LOOP_START = 'LOOP START';\nexport const LOOP_STOP = 'LOOP STOP';\nexport const LOOP_UNSET = 'LOOP UNSET';\n","/**\n * Takes an array and returns a random element.\n * @param array\n */\nexport function randomElement(array: any[]) {\n  return array[randomIndex(array)];\n}\n\n/**\n * Takes an array and returns a random index position\n * @param array Any array\n */\nexport function randomIndex(array: any[]) {\n  return Math.floor(Math.random() * array.length);\n}\n\nexport function handleError(error: any) {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.log(error.response.data);\n    console.log(error.response.status);\n    console.log(error.response.headers);\n  } else if (error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n    // http.ClientRequest in node.js\n    console.log(error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log('Error', error.message);\n  }\n  console.log(error.config);\n}\n","import lz from 'lz-string';\nimport { Pool, Ball, Card, Results } from '@np-bingo/types';\nimport { letters } from '../Constants';\nimport { randomIndex } from '.';\n\n/**\n * Creates an array with 25 randomized values ordered left to right, top to bottom from a pool of values\n * @param pool multidimensional array of all possible values\n */\n\nexport function createCard(pool: Pool) {\n  let card = [];\n  let i: number;\n  for (i = 0; i < 5; i++) {\n    let column = createColumn(pool[i]);\n\n    let x: number;\n    for (x = 0; x < 5; x++) {\n      let offset = 5 * x + i;\n      card[offset] = column[x];\n    }\n  }\n\n  // Note: Remove 13th card and replace with a free spot on display\n  // card[12] = 'free';\n  return card;\n}\n/**\n * Create a randomized column array from an array of integers\n * @param array integer array\n */\nfunction createColumn(array: number[]) {\n  let column = [];\n\n  // Store values into new array so that we can remove used values and prevent duplication\n  let values = array;\n\n  let i: number;\n  for (i = 0; i < 5; i++) {\n    let index = randomIndex(values);\n    let value = values[index];\n    column[i] = value;\n\n    // Remove value from values array for loop interations 0 thru 3\n    if (i !== 4) {\n      values = values.filter(function (item: number) {\n        return item !== value;\n      });\n    }\n  }\n\n  return column;\n}\n\n/**\n * Serialized card to a unique string\n * @param card\n */\nexport function serializeCard(card: Card): string {\n  // Remove free space from serial\n  card.splice(12, 1);\n  let serial = card.join('');\n  let compressedSerial = compressSerial(serial);\n  return compressedSerial;\n}\n\n/**\n * Compress serial\n * @param serial string\n */\nfunction compressSerial(serial: string) {\n  return lz.compressToBase64(serial);\n}\n\n/**\n * Decompress serial\n * @param serial string\n */\nexport function decompressSerial(serial: string) {\n  return lz.decompressFromBase64(serial);\n}\n\n/**\n * Takes the entire set of remaining balls and returns a random ball\n * @param pool\n */\n\nexport function getBall(pool: Pool): Ball {\n  let { columns, remainder } = getPoolSize(pool);\n\n  if (columns.length > 0) {\n    let columnIndex = randomIndex(columns);\n    let values = pool[columns[columnIndex]];\n    let valueIndex = randomIndex(values);\n\n    return {\n      key: columns[columnIndex],\n      number: values[valueIndex],\n      column: letters[columns[columnIndex]],\n      remainder: remainder - 1,\n    };\n  } else {\n    return {\n      key: 0,\n      number: 0,\n      column: '',\n      remainder: 0,\n    };\n  }\n}\n/**\n * Removes a single ball from the remaining set of balls and returns the updated array\n * @param pool Remaining set of all possible balls\n * @param value The ball to be removed\n */\n\nexport function removeBall(pool: Pool, ball: Ball) {\n  return pool.map(function (item: number[], index) {\n    if (index === ball.key) {\n      return item.filter(function (element: number) {\n        return element !== ball.number;\n      });\n    }\n    return item;\n  });\n}\n/**\n * Takes a pool of numbers and return the size of the pool and an index of valid remaining columns\n * @param pool Set of all balls in pool\n */\n\nexport function getPoolSize(pool: Pool) {\n  let remainder = 0;\n  let columns = [];\n\n  let i;\n  for (i = 0; i < pool.length; i++) {\n    if (pool[i].length > 0) {\n      remainder += pool[i].length;\n      columns.push(i);\n    }\n  }\n\n  return { remainder, columns };\n}\n\nexport function validateCard(card: Card, draws: Pool) {\n  let results: Results = { row: false, column: false, diagonal: false };\n  let rowResults = checkRows(card, draws);\n  let columnResults = checkColumns(card, draws);\n  let diagonalResults = checkDiagonals(card, draws);\n\n  if (rowResults) {\n    results = { ...results, row: rowResults };\n  }\n  if (columnResults) {\n    results = { ...results, column: columnResults };\n  }\n  if (diagonalResults) {\n    results = { ...results, diagonal: diagonalResults };\n  }\n  return results;\n}\n/**\n * Check all rows on card for a win\n * Returns true if winning row is found\n * @param card Current card to be checked\n * @param draws Pool of currently drawn Bingo balls\n */\nfunction checkRows(card: Card, draws: Pool) {\n  let result: number[] | boolean = false;\n  let i;\n  for (i = 0; i < 5; i++) {\n    if (i === 2) {\n      result = checkCellsInRow(card, draws, i, true);\n    } else {\n      result = checkCellsInRow(card, draws, i);\n    }\n    if (result) {\n      break;\n    }\n  }\n  if (result) {\n    return result;\n  } else {\n    return false;\n  }\n}\n/**\n * Check each cell in each row on card for a win\n * Returns true if a row contains only winning cells\n * @param card Current card to be checked\n * @param draws Pool of currently drawn Bingo balls\n * @param offset Row offset\n * @param flag Flag for free spot\n */\nfunction checkCellsInRow(\n  card: Card,\n  draws: Pool,\n  offset?: number,\n  flag?: boolean\n) {\n  if (!offset) {\n    offset = 0;\n  }\n  let result: number[] | boolean = [];\n  let i;\n  for (i = 0; i < 5; i++) {\n    if (flag && i === 2) {\n      result.push(offset * 5 + i);\n      continue;\n    }\n    let check = findCommonElements([card[offset * 5 + i]], draws[i]);\n\n    // if comparison fails reset result array, otherwise push successful index\n    if (!check) {\n      result = [];\n      break;\n    } else {\n      result.push(offset * 5 + i);\n    }\n    continue;\n  }\n  if (result.length === 0) {\n    result = false;\n  }\n  return result;\n}\n/**\n * Check all columns on card for a win\n * Returns true if winning column is found\n * @param card Current card to be checked\n * @param draws Pool of currently drawn Bingo balls\n */\nfunction checkColumns(card: Card, draws: Pool) {\n  let result: number[] | boolean = false;\n  let i;\n  for (i = 0; i < 5; i++) {\n    if (i === 2) {\n      result = checkCellsInColumn(card, draws, i, true);\n    } else {\n      result = checkCellsInColumn(card, draws, i);\n    }\n    if (result) {\n      break;\n    }\n  }\n  if (result) {\n    return result;\n  } else {\n    return false;\n  }\n}\n/**\n * Check each cell in each column on card for a win\n * Returns true if a column contains only winning cells\n * @param card Current card to be checked\n * @param draws Pool of currently drawn Bingo balls\n * @param offset Row offset\n * @param flag Flag for free spot\n */\nfunction checkCellsInColumn(\n  card: Card,\n  draws: Pool,\n  offset?: number,\n  flag?: boolean\n) {\n  if (!offset) {\n    offset = 0;\n  }\n  let result: number[] | boolean = [];\n  let i;\n  for (i = 0; i < 5; i++) {\n    if (flag && i === 2) {\n      result.push(i * 5 + offset);\n      continue;\n    }\n    let check = findCommonElements([card[i * 5 + offset]], draws[offset]);\n\n    // if comparison fails reset result array, otherwise push successful index\n    if (!check) {\n      result = [];\n      break;\n    } else {\n      result.push(i * 5 + offset);\n    }\n    continue;\n  }\n  if (result.length === 0) {\n    result = false;\n  }\n  return result;\n}\n/**\n * Check all diagonals on card for a win\n * Returns true if winning diagonal is found\n * @param card Current card to be checked\n * @param draws Pool of currently drawn Bingo balls\n */\nfunction checkDiagonals(card: Card, draws: Pool) {\n  let result: number[] | boolean = false;\n  let i;\n  for (i = 0; i < 2; i++) {\n    if (i === 0) {\n      result = checkFallingDiagonal(card, draws, true);\n    }\n    if (i === 1) {\n      result = checkRisingDiagonal(card, draws, true);\n    }\n    if (result) {\n      break;\n    }\n  }\n  if (result) {\n    return result;\n  } else {\n    return false;\n  }\n}\n/**\n * Check each cell on the falling diagonal on card for a win\n * Returns true if the falling diagonal contains only winning cells\n * @param card Current card to be checked\n * @param draws Pool of currently drawn Bingo balls\n * @param flag Flag for free spot\n */\nfunction checkFallingDiagonal(card: Card, draws: Pool, flag?: boolean) {\n  let result: number[] | boolean = [];\n  let i;\n  for (i = 0; i < 5; i++) {\n    if (flag && i === 2) {\n      result.push(i * 6);\n      continue;\n    }\n    let check = findCommonElements([card[i * 6]], draws[i]);\n\n    // if comparison fails reset result array, otherwise push successful index\n    if (!check) {\n      result = [];\n      break;\n    } else {\n      result.push(i * 6);\n    }\n    continue;\n  }\n  if (result.length === 0) {\n    result = false;\n  }\n  return result;\n}\n/**\n * Check each cell on the rising diagonal on card for a win\n * Returns true if the rising diagonal contains only winning cells\n * @param card Current card to be checked\n * @param draws Pool of currently drawn Bingo balls\n * @param flag Flag for free spot\n */\nfunction checkRisingDiagonal(card: Card, draws: Pool, flag?: boolean) {\n  let result: number[] | boolean = [];\n  let i;\n  // Too tired to figure out an algorithim for this one\n  // card[5 * 4 + 0 ] draw[0]\n  // card[5 * 3 + 1 ] draw[1]\n  // card[5 * 2 + 2 ] draw[2]\n  // card[5 * 1 + 3 ] draw[3]\n  // card[5 * 0 + 4 ] draw[4]\n  const offset = [4, 3, 2, 1, 0];\n\n  for (i = 0; i < 5; i++) {\n    if (flag && i === 2) {\n      result.push(offset[i] * 5 + i);\n      continue;\n    }\n    let check = findCommonElements([card[offset[i] * 5 + i]], draws[i]);\n    // if comparison fails reset result array, otherwise push successful index\n    if (!check) {\n      result = [];\n      break;\n    } else {\n      result.push(offset[i] * 5 + i);\n    }\n    continue;\n  }\n  if (result.length === 0) {\n    result = false;\n  }\n  return result;\n}\n/**\n * Find if current value exists in the search pool\n * @param value Array of number to be checked\n * @param search Array of search pool\n */\nfunction findCommonElements(value: number[], search: number[]) {\n  return search.some((item) => value.includes(item));\n}\n","import React from 'react';\nimport { Ball as BallType } from '@np-bingo/types';\nimport './style.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Badge from '@material-ui/core/Badge';\n\nexport interface BallProps {\n  number: BallType['number'];\n  column: BallType['column'];\n  remainder: BallType['remainder'];\n  loop?: boolean;\n  progress?: number;\n  disabled?: boolean;\n}\n\nexport default function Ball({\n  number = 0,\n  column = '',\n  remainder = 75,\n  loop = false,\n  progress = 0,\n  disabled = false,\n}: BallProps) {\n  return (\n    <div className=\"ball-container\">\n      <Badge\n        color=\"primary\"\n        className=\"badge monospace\"\n        badgeContent={disabled ? 0 : remainder}\n        overlap=\"circle\"\n      >\n        <div\n          className={['ball', 'shadow', column, disabled && 'disabled'].join(\n            ' '\n          )}\n        >\n          <div className=\"column monospace\">{column}</div>\n          <div className=\"number monospace\">{number !== 0 && number}</div>\n        </div>\n      </Badge>\n      {loop && (\n        <CircularProgress\n          className=\"progress\"\n          size={102}\n          variant=\"determinate\"\n          value={progress}\n        />\n      )}\n    </div>\n  );\n}\n","import { Action, AppState, Gamestate, Gamemode } from '@np-bingo/types';\nimport {\n  INIT_GAME,\n  READY_CHECK,\n  START_GAME,\n  END_GAME,\n  CHECK_CARD_SUCCESS,\n  NEW_BALL,\n  UPDATE_POOL,\n  BINGO,\n  STANDBY,\n  VALIDATE,\n  GET_CARD,\n  FAILURE,\n  SET_ROOM,\n  JOIN_ROOM,\n  PLAYER_JOINED,\n  PLAYER_LEFT,\n  PLAYER_READY,\n  SET_BALL,\n  PLAYER_KICKED,\n  PLAYER_UNREADY,\n  PAUSE,\n  CHECK_CARD_FAILURE,\n  WIN_GAME,\n  UPDATE_GAMEMODE,\n  LOOP_START,\n  LOOP_STOP,\n} from '../Constants';\n\nexport const initialState: AppState = {\n  gamestate: 'init' as Gamestate,\n  room: '',\n  host: { _id: '', uid: 0, name: '', socket: '' },\n  ball: { key: 0, number: 0, column: '', remainder: 75 },\n  players: [],\n  pool: BINGO,\n  draws: [[], [], [], [], []],\n  playerCard: {\n    card: new Array(25),\n    owner: { _id: '', uid: 0, name: '', socket: '' },\n  },\n  winner: {\n    methods: [],\n    data: {},\n    player: { _id: '', uid: 0, name: '', socket: '' },\n    card: new Array(25),\n  },\n  kicked: false,\n  rules: { mode: 'default' as Gamemode, special: [] },\n  loop: false,\n};\n\nexport function reducer(state: AppState, action: Action) {\n  switch (action.type) {\n    case INIT_GAME:\n      // TODO Why does draws need to be forced?\n      // Probably mutating state somewhere\n      return { ...initialState, draws: [[], [], [], [], []] };\n    case READY_CHECK:\n      return {\n        ...state,\n        gamestate: 'ready' as Gamestate,\n        ball: { ...initialState.ball },\n        pool: [...initialState.pool],\n        draws: [[], [], [], [], []],\n        playerCard: { ...initialState.playerCard },\n        winner: { ...initialState.winner },\n      };\n    case STANDBY:\n      return { ...state, gamestate: 'standby' as Gamestate };\n    case START_GAME:\n      return { ...state, gamestate: 'start' as Gamestate };\n    case VALIDATE:\n      return { ...state, gamestate: 'validate' as Gamestate };\n    case PAUSE:\n      return { ...state, gamestate: 'pause' as Gamestate };\n    case FAILURE:\n      return { ...state, gamestate: 'failure' as Gamestate }; // TODO Verify that this is unsued\n    case WIN_GAME:\n      return { ...state, gamestate: 'win' as Gamestate }; // TODO Verify that this is unsued\n    case END_GAME:\n      return { ...state, gamestate: 'end' as Gamestate };\n    case SET_ROOM:\n      return {\n        ...state,\n        room: action.payload.room,\n        host: { ...action.payload.host },\n      };\n    case JOIN_ROOM:\n      return {\n        ...state,\n        room: action.payload.room,\n        host: { ...action.payload.host },\n      };\n    case PLAYER_JOINED:\n      return { ...state, players: [...state.players, action.payload] };\n    case PLAYER_LEFT:\n      const leaveFiltered = state.players.filter((element) => {\n        return element.socket !== action.payload.socket;\n      });\n      return { ...state, players: [...leaveFiltered] };\n    case PLAYER_KICKED:\n      return { ...state, kicked: true };\n    case PLAYER_READY:\n      const readyFiltered = state.players.map((element) => {\n        if (element.socket === action.payload.socket) {\n          return { ...element, ready: true };\n        }\n        return element;\n      });\n      return { ...state, players: [...readyFiltered] };\n    case PLAYER_UNREADY:\n      const unreadyFiltered = state.players.map((element) => {\n        return { ...element, ready: false };\n      });\n      return { ...state, players: [...unreadyFiltered] };\n    case GET_CARD:\n      return {\n        ...state,\n        playerCard: {\n          ...state.playerCard,\n          card: [...action.payload.card],\n          owner: { ...action.payload.owner },\n        },\n      };\n    case CHECK_CARD_SUCCESS:\n      return {\n        ...state,\n        gamestate: 'win' as Gamestate,\n        winner: { ...action.payload },\n      };\n    case CHECK_CARD_FAILURE:\n      return {\n        ...state,\n        gamestate: 'failure' as Gamestate,\n        winner: { ...initialState.winner },\n        playerCard: { ...initialState.playerCard },\n      };\n    case NEW_BALL:\n      return {\n        ...state,\n        ball: { ...action.payload.ball },\n        draws: [...action.payload.draws],\n        pool: [...action.payload.pool],\n      };\n    case SET_BALL:\n      return { ...state, ball: { ...action.payload } };\n    case UPDATE_POOL:\n      return { ...state, ball: { ...state.ball, remainder: action.payload } };\n    case UPDATE_GAMEMODE:\n      return { ...state, rules: { ...state.rules, mode: action.payload } };\n    case LOOP_START:\n      return { ...state, loop: true };\n    case LOOP_STOP:\n      return { ...state, loop: false };\n    default:\n      throw new Error('Invalid dispatch type.');\n  }\n}\n","const config = {\n  'dark-mode': false,\n  'solo-mode': true, // Allow solo mode\n  'share-room': true,\n  'public-rooms': false, // TODO Only mock-up\n  'game-modes': false, // TODO no game logic built for alternate modes\n  'special-rules': false, // TODO no win conditions built for special rules\n  'streamer-mode': false, // TODO not implemented\n  'max-room-size': 30,\n  'max-active-games': 5,\n  'ball-delay': 3500, // 3.5 seconds before next auto-draw in solo mode\n};\n\nexport default config;\n","import React from 'react';\nimport { initialState } from '../Reducers/app.reducer';\nimport features from '../Config/features';\n\nexport const GameContext = React.createContext({\n  gamestate: initialState.gamestate,\n  room: initialState.room,\n  host: { ...initialState.host },\n  mode: initialState.rules.mode,\n});\n\nexport const BallContext = React.createContext({\n  ball: { ...initialState.ball },\n  loop: initialState.loop,\n  progress: 0,\n});\n\nexport const FeautresContext = React.createContext({ ...features });\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Gamestate } from '@np-bingo/types';\n// import { randomElement } from '../../Utils';\n\n/**\n * Text to be displayed to players based on current gamestate\n * @param gamestate\n * @param host View\n * @returns string\n */\nexport function statusText(gamestate: Gamestate) {\n  let text: string;\n  switch (gamestate) {\n    case 'init':\n      text = 'Waiting on host to start the game...';\n      break;\n    case 'ready':\n      text = 'Draw a card and click ready.';\n      break;\n    case 'standby':\n      text = 'Waiting for host to dispense a ball...';\n      break;\n    case 'start':\n      text = 'Click a square on the card to cross it out';\n      break;\n    case 'validate':\n      text = 'Sending card to host...';\n      break;\n    case 'pause':\n      text = 'A card is being checked for BINGO!';\n      break;\n    case 'failure':\n      // let failureText = [\n      //   'Jumping the gun. No Bingo...',\n      //   'False alarm... BONGO!',\n      //   'Just practicing? No Bingo...',\n      //   'Falsie. Keep trying...',\n      // ];\n      // text = randomElement(failureText);\n\n      text = 'Jumping the gun. No Bingo...';\n      break;\n    case 'end':\n      text = 'Game Over!';\n      break;\n    case 'win':\n      text = 'BINGO!';\n      break;\n    default:\n      throw new Error(`Invalid Gamestate in Player Status`);\n  }\n  return text;\n}\n\n/**\n * Text to be displayed to host based on current gamestate\n * @param gamestate\n * @param count\n * @returns string\n */\nexport function hostStatusText(gamestate: Gamestate, count?: number) {\n  let text: string;\n  switch (gamestate) {\n    case 'init':\n      // text = 'Click to start the game.';\n      text = ' ';\n      break;\n    case 'ready':\n      text = 'Waiting for player(s) to join...';\n      if (count) {\n        if (count === 1) {\n          text = `${count} player has joined...`;\n        }\n        if (count > 1) {\n          text = `${count} players have joined...`;\n        }\n      }\n      break;\n    case 'standby':\n      text = 'Click to dispense a ball.';\n      break;\n    case 'start':\n      // let rollText = [\n      //   'Call the ball, then keep on rolling...',\n      //   'Call it out! Then fetch another ball!',\n      //   'Say the name of the ball, then roll again!',\n      //   'Call out the ball, then dispense another.',\n      // ];\n      // text = randomElement(rollText);\n      text = 'Call out the ball, then dispense another';\n      break;\n    case 'validate':\n      text = 'Check card for a BINGO!';\n      break;\n    case 'pause':\n      text = 'Checking if card is a winner...';\n      break;\n    case 'failure':\n      text = 'This card is not a Bingo. Roll on!';\n      break;\n    case 'end':\n      text = 'Game Over!';\n      break;\n    case 'win':\n      text = 'BINGO!';\n      break;\n    default:\n      throw new Error('Invalid Gamestate in Host Status');\n  }\n  return text;\n}\n\nexport interface StatusProps {\n  gamestate: Gamestate;\n  host?: boolean;\n  count?: number;\n}\n\nexport default function Status({\n  gamestate = 'init',\n  host = false,\n  count = 0,\n}: StatusProps) {\n  return (\n    <Typography>\n      {host ? hostStatusText(gamestate, count) : statusText(gamestate)}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n    },\n  });\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)(\n  ({ children, classes, onClose, ...props }: DialogTitleProps) => {\n    return (\n      <MuiDialogTitle disableTypography {...props}>\n        <Typography variant=\"h6\">{children}</Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={[classes.closeButton, 'close-button'].join(' ')}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </MuiDialogTitle>\n    );\n  }\n);\n\nexport default DialogTitle;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n/**\n * Use Toggle Hook\n * @param initialValue\n * @returns value, toggle\n */\nexport function useToggle(initialValue = false): [boolean, () => void] {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => {\n    setValue((v) => !v);\n  }, []);\n  return [value, toggle];\n}\n\n/**\n * Use Form Hook\n * @param initialState\n * @param callback\n * @returns inputs, handleChange, handleSubmit\n */\nexport function useForm(\n  initialState: { [key: string]: string },\n  callback?: (inputs: any) => void\n): [\n  { [key: string]: string },\n  string,\n  (event: React.ChangeEvent<HTMLInputElement>) => void,\n  () => void,\n  (\n    event: React.ClipboardEvent<HTMLInputElement>,\n    key: string,\n    maxStringLength?: number | undefined\n  ) => void\n] {\n  const [inputs, setInputs] = useState(initialState);\n  const [errors, setErrors] = useState('');\n\n  /**\n   * Handles input change\n   * @param event Change event\n   */\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    event.persist();\n    setInputs((inputs: any) => ({\n      ...inputs,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  /**\n   * Handles form submit and returns useForm callback function\n   * @param event Submit Event\n   */\n  function handleSubmit(event?: React.FormEvent<HTMLFormElement>) {\n    if (event) {\n      event.preventDefault();\n    }\n    callback && callback(inputs);\n  }\n\n  /**\n   * Handles clipboard paste\n   * @param event Paste event\n   * @param key Object key name\n   * @param maxStringLength Clipboard max string length\n   */\n  function handlePaste(\n    event: React.ClipboardEvent<HTMLInputElement>,\n    key: string,\n    maxStringLength?: number\n  ) {\n    let paste = event.clipboardData.getData('text');\n\n    try {\n      if (maxStringLength && paste.length > maxStringLength) {\n        throw new Error('Clipboard paste is too long');\n      }\n\n      let pasteArray = paste.split('');\n      let i: number;\n      let data: { [key: string]: string };\n      let pastedInput: { [key: string]: string } = {};\n\n      for (i = 0; i < pasteArray.length; i++) {\n        data = { [`${key}${i + 1}`]: pasteArray[i] };\n        pastedInput = { ...pastedInput, ...data };\n      }\n\n      setInputs((inputs: any) => ({\n        ...inputs,\n        ...pastedInput,\n      }));\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  function handleError(error: Error) {\n    setErrors(error.message);\n    // TODO removed return, test this\n    // return\n  }\n\n  return [inputs, errors, handleChange, handleSubmit, handlePaste];\n}\n\n/**\n * Use Dialog Hook\n * @param initialState\n * @param callback\n * @returns open, handleOpen, handleClose\n */\nexport function useDialog(\n  initialState: boolean,\n  callback?: () => void\n): [boolean, () => void, () => void] {\n  const [open, setOpen] = useState(initialState);\n\n  /**\n   * Handles open\n   */\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  /**\n   * Handles close\n   */\n  const handleClose = () => {\n    setOpen(false);\n    callback && callback();\n  };\n\n  return [open, handleOpen, handleClose];\n}\n\n/**\n * Use Title Hook\n * @param title\n */\nexport const useTitle = (title?: string) => {\n  useEffect(() => {\n    title\n      ? (document.title = `${title} Bingo - np-bingo`)\n      : (document.title = `Bingo - np-bingo`);\n  });\n};\n\n/**\n * Builds on useLocation to parse the query string\n * @returns\n */\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React, { useRef, useState } from 'react';\nimport ShareIcon from '@material-ui/icons/Share';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '../DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport { useDialog } from '../../Utils/custom-hooks';\nimport { Room } from '@np-bingo/types';\n\nexport interface ShareProps {\n  room: Room;\n}\n\nfunction Share({ room = '' }: ShareProps) {\n  const [open, handleOpen, handleClose] = useDialog(false, handleCopyText);\n  const [copyText, setCopyText] = useState('Click to copy link to clipboard');\n  const ref = useRef<HTMLInputElement>(null);\n\n  const copyToClipboard = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (ref.current) {\n      ref.current.select();\n\n      try {\n        document.execCommand('copy');\n        setCopyText('Link copied to clipboard!');\n      } catch (err) {\n        throw new Error('Error in copy code to clipboard');\n      }\n    }\n  };\n\n  /**\n   * Callback function on Dialog close\n   */\n  function handleCopyText() {\n    setCopyText('Click to copy link to clipboard');\n  }\n\n  // TODO Hide full URL when config set to Streamer Mode\n\n  return (\n    <React.Fragment>\n      <IconButton\n        className=\"share-button\"\n        onClick={handleOpen}\n        aria-label=\"share\"\n      >\n        <ShareIcon />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"share-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"xs\"\n      >\n        <DialogTitle id=\"share-dialog-title\" onClose={handleClose}>\n          Share Game\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>{copyText}</DialogContentText>\n          <TextField\n            inputRef={ref}\n            value={`${window.location.protocol}//${window.location.host}/join?r=${room}`}\n            id=\"code\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            className=\"copy-button\"\n            onClick={copyToClipboard}\n            color=\"primary\"\n            autoFocus\n          >\n            Copy\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default Share;\n","import React from 'react';\nimport './style.css';\nimport Share from '../Share';\nimport { Room } from '@np-bingo/types';\nimport { FeautresContext } from '../../Utils/contexts';\n\nexport interface CodeProps {\n  room: Room;\n}\n\nexport default function Code({ room = '    ' }: CodeProps) {\n  const code = (room: string) => {\n    let array = Object.assign([], room);\n    return array.map((value, index) => {\n      return (\n        <span key={index} className={`code-item ${room === '' && 'empty'}`}>\n          {value}\n        </span>\n      );\n    });\n  };\n\n  const Empty = () => {\n    return (\n      <React.Fragment>\n        <span className=\"code-item empty\">_</span>\n        <span className=\"code-item empty\">_</span>\n        <span className=\"code-item empty\">_</span>\n        <span className=\"code-item empty\">_</span>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div id=\"Code\">\n      <div className=\"code-label\">Room Code:</div>\n      <div className=\"code-row\">\n        <div className=\"code-left\"></div>\n        <div className=\"code\">\n          <code>{room !== '' ? code(room) : <Empty />}</code>\n        </div>\n        <FeautresContext.Consumer>\n          {(features) => (\n            <div className=\"code-right align-left\">\n              {features['share-room'] && room !== '' && <Share room={room} />}\n            </div>\n          )}\n        </FeautresContext.Consumer>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Code from '../Code';\nimport { Gamemode } from '@np-bingo/types';\nimport './style.css';\nimport Typography from '@material-ui/core/Typography';\nexport interface FooterProps {\n  home?: boolean;\n  room?: string;\n  mode?: Gamemode;\n  onClick?: () => void;\n}\n\nfunction Footer({\n  home = false,\n  room = '',\n  mode = 'default',\n  onClick,\n}: FooterProps) {\n  return (\n    <footer>\n      {home ? (\n        <React.Fragment>\n          <Typography align=\"center\">Made by Tadjh Brooks</Typography>\n          <Link href=\"https://github.com/TadjhBrooks/np-bingo/\" color=\"primary\">\n            https://github.com/TadjhBrooks/np-bingo\n          </Link>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {mode !== 'solo' && <Code room={room} />}\n          <Link onClick={onClick} component={RouterLink} to=\"/\">\n            Leave Room\n          </Link>\n        </React.Fragment>\n      )}\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { letters } from '../../Constants';\nimport { Pool } from '@np-bingo/types';\nimport './style.css';\n\nexport interface DrawsProps {\n  draws?: Pool;\n  disabled?: boolean;\n}\n\nexport default function Draws({\n  draws = [[], [], [], [], []],\n  disabled,\n}: DrawsProps) {\n  let table = [];\n  let itemsInit = [\n    <li key=\"ball1\"></li>,\n    <li key=\"ball2\"></li>,\n    <li key=\"ball3\"></li>,\n    <li key=\"ball4\"></li>,\n    <li key=\"ball5\"></li>,\n    <li key=\"ball6\"></li>,\n    <li key=\"ball7\"></li>,\n    <li key=\"ball8\"></li>,\n    <li key=\"ball9\"></li>,\n    <li key=\"ball10\"></li>,\n    <li key=\"ball11\"></li>,\n    <li key=\"ball12\"></li>,\n    <li key=\"ball13\"></li>,\n    <li key=\"ball14\"></li>,\n    <li key=\"ball15\"></li>,\n  ];\n  let letter;\n  let i;\n  for (i = 0; i < draws.length; i++) {\n    letter = letters[i];\n    let items = [...itemsInit];\n    let j;\n    for (j = 0; j < draws[i].length; j++) {\n      items[j] = <li key={`ball${j + 1}`}>{`${letter}${draws[i][j]}`}</li>;\n    }\n\n    table[i] = (\n      <ul\n        key={`column${i + 1}`}\n        className={['draws-column', `draws-column-${i + 1}`, 'monospace'].join(\n          ' '\n        )}\n      >\n        {items}\n      </ul>\n    );\n  }\n  return (\n    <div className={['draws', 'shadow', disabled && 'disabled'].join(' ')}>\n      {table}\n    </div>\n  );\n}\n","import React from 'react';\nimport './style.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { Player } from '@np-bingo/types';\nimport Typography from '@material-ui/core/Typography';\n\nexport interface ListProps {\n  data?: any[];\n  action?: (param?: any) => void;\n}\n\nexport interface PlayerListProps extends ListProps {\n  action?: (player: Player) => void;\n}\n\nexport default function PlayerList({\n  data = [],\n  action: onRemove,\n}: PlayerListProps) {\n  return (\n    <div className=\"player-list\">\n      {/* <Typography variant=\"h5\" gutterBottom>\n        Players\n      </Typography> */}\n      {data.length !== 0 ? (\n        <List>\n          {data.map((player, index) => {\n            return (\n              <ListItem key={`player${index + 1}`}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {player.ready ? <CheckIcon /> : <RemoveIcon />}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={player.name}\n                  secondary={player.ready ? 'Ready' : 'Selecting a card...'}\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    className=\"delete-button\"\n                    onClick={onRemove && (() => onRemove(player))}\n                    edge=\"end\"\n                    aria-label=\"status\"\n                  >\n                    <CancelIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <Typography align=\"center\">No players found</Typography>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport Ball from '../../Components/Ball';\nimport { BallContext, GameContext } from '../../Utils/contexts';\nimport { Gamestate, Player, Pool, Room } from '@np-bingo/types';\nimport StatusMessage from '../../Components/Status';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Footer from '../../Components/Footer';\nimport Draws from '../../Components/Draws';\nimport PlayerList from '../../Components/PlayerList';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport './style.css';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport interface HostProps {\n  draws: Pool;\n  players: Player[];\n  checkCard?: () => void;\n  newBall?: () => void;\n  leaveRoom?: (room: Room) => void;\n  gameToggle?: (gamestate: Gamestate, room: Room) => void;\n  removePlayer?: (player: Player) => void;\n  start?: (room: Room) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    width: {\n      width: theme.spacing(18),\n    },\n  })\n);\n\nfunction Host({\n  draws = [[], [], [], [], []],\n  players = [],\n  checkCard,\n  newBall,\n  leaveRoom,\n  gameToggle,\n  removePlayer,\n  start,\n}: HostProps) {\n  const classes = useStyles();\n\n  const buttonText = (gamestate: Gamestate) => {\n    switch (gamestate) {\n      case 'ready':\n        return 'Start Game';\n      case 'end':\n        return 'New Game';\n      default:\n        return 'End Game';\n    }\n  };\n\n  const handleBall = (gamestate: Gamestate, room: Room) => {\n    if (gamestate === 'standby' || gamestate === 'failure') {\n      start && start(room);\n    }\n    newBall && newBall();\n  };\n\n  return (\n    <GameContext.Consumer>\n      {(gameContext) => (\n        <div className=\"Host\">\n          <header>\n            <div className=\"app-buttons\">\n              <ButtonGroup\n                variant=\"contained\"\n                color=\"primary\"\n                aria-label=\"contained primary button group\"\n                size=\"large\"\n              >\n                <Button\n                  className={classes.width}\n                  onClick={() =>\n                    gameToggle &&\n                    gameToggle(gameContext.gamestate, gameContext.room)\n                  }\n                >\n                  {buttonText(gameContext.gamestate)}\n                </Button>\n                <Button\n                  className={`${classes.width} ${\n                    gameContext.gamestate !== 'validate' && 'disabled'\n                  }`}\n                  disabled={gameContext.gamestate !== 'validate' && true}\n                  onClick={checkCard}\n                >\n                  Check Card\n                </Button>\n              </ButtonGroup>\n            </div>\n            <StatusMessage\n              host={true}\n              gamestate={gameContext.gamestate}\n              count={players.length}\n            />\n          </header>\n          <div className=\"main\" role=\"main\">\n            {gameContext.gamestate === 'ready' ? (\n              <PlayerList data={players} action={removePlayer} />\n            ) : (\n              <React.Fragment>\n                <BallContext.Consumer>\n                  {(ballContext) => (\n                    <div className=\"ball-wrapper\">\n                      <IconButton\n                        color=\"primary\"\n                        disabled={\n                          gameContext.gamestate !== 'start' &&\n                          gameContext.gamestate !== 'standby' &&\n                          gameContext.gamestate !== 'failure' &&\n                          true\n                        }\n                        className={`${\n                          gameContext.gamestate !== 'start' &&\n                          gameContext.gamestate !== 'standby' &&\n                          gameContext.gamestate !== 'failure' &&\n                          'disabled'\n                        }`}\n                        onClick={() =>\n                          handleBall(gameContext.gamestate, gameContext.room)\n                        }\n                      >\n                        <AddCircleOutlineIcon fontSize=\"large\" />\n                      </IconButton>\n                      <Ball\n                        number={ballContext.ball.number}\n                        column={ballContext.ball.column}\n                        remainder={ballContext.ball.remainder}\n                        disabled={\n                          gameContext.gamestate !== 'start' &&\n                          gameContext.gamestate !== 'standby' &&\n                          gameContext.gamestate !== 'failure' &&\n                          true\n                        }\n                      />\n                    </div>\n                  )}\n                </BallContext.Consumer>\n\n                <Draws\n                  draws={draws}\n                  disabled={gameContext.gamestate === 'end' && true}\n                />\n              </React.Fragment>\n            )}\n          </div>\n          <Footer\n            room={gameContext.room}\n            onClick={() => leaveRoom && leaveRoom(gameContext.room)}\n          />\n        </div>\n      )}\n    </GameContext.Consumer>\n  );\n}\n\nexport default Host;\n","import React, { useState } from 'react';\nimport './style.css';\n\nexport interface CellProps extends React.HTMLAttributes<HTMLDivElement> {\n  id: string;\n  className?: string;\n  index: number;\n  onClick: (event: React.MouseEvent) => void;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\nexport default function Cell({\n  index = 1,\n  children,\n  checked: override,\n  onClick,\n  className,\n  disabled,\n  ...props\n}: CellProps) {\n  const [checked, setChecked] = useState(false);\n  const eventHandler = (event: React.MouseEvent) => {\n    if (disabled) {\n      return;\n    }\n    setChecked((prevCheck) => !prevCheck);\n    onClick(event);\n  };\n  // TODO override may need work\n  return (\n    <div\n      className={[\n        'grid-item',\n        `grid-item-${index}`,\n        (override || checked) && 'checked',\n        className && className,\n        'monospace',\n      ].join(' ')}\n      onClick={eventHandler}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { letters } from '../../Constants';\nimport './style.css';\n\nexport interface LogoProps {\n  home?: boolean;\n  winner?: boolean;\n}\n\nexport default function Logo({ home = false, winner }: LogoProps) {\n  return (\n    <div className={['logo', home && 'home'].join(' ')}>\n      {letters.map((value, index) => {\n        return (\n          <div\n            key={index}\n            className={[\n              'logo-item',\n              `logo-item-${index + 1}`,\n              winner && 'winner',\n            ].join(' ')}\n          >\n            <div className={`${home && 'shadow'}`}>{value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { Action, PlayerState } from '@np-bingo/types';\nimport {\n  INIT_CROSSMARKS,\n  INIT_GAME,\n  NEW_CARD,\n  UPDATE_CROSSMARKS,\n  WINNER_CROSSMARKS,\n} from '../Constants';\n\nexport const initialState: PlayerState = {\n  card: new Array(25),\n  serial: '',\n  crossmarks: {},\n};\n\nexport function reducer(state: PlayerState, action: Action) {\n  switch (action.type) {\n    case INIT_GAME:\n      return { ...initialState };\n    case NEW_CARD:\n      return {\n        ...state,\n        card: action.payload.card,\n        serial: action.payload.serial,\n      };\n    case INIT_CROSSMARKS:\n      return { ...state, crossmarks: action.payload };\n    case UPDATE_CROSSMARKS:\n      return {\n        ...state,\n        crossmarks: { ...state.crossmarks, ...action.payload },\n      };\n    case WINNER_CROSSMARKS:\n      return {\n        ...state,\n        crossmarks: { ...action.payload },\n      };\n    default:\n      throw new Error('Invalid Player dispatch type.');\n  }\n}\n","import React from 'react';\nimport { Card } from '@np-bingo/types';\nimport Cell from '../Cell';\nimport Logo from '../Logo';\nimport './style.css';\nimport { initialState } from '../../Reducers/play.reducer';\n\nexport interface BoardProps {\n  card: Card;\n  serial: string;\n  crossmarks: { [key: string]: boolean };\n  winner: boolean;\n  onClick: (event: React.MouseEvent) => void;\n}\n\nexport default function Board({\n  card = [...initialState.card],\n  serial = '',\n  crossmarks = { ...initialState.crossmarks },\n  winner = false,\n  ...props\n}: BoardProps) {\n  return (\n    <div className=\"grid-container\">\n      <div className={['grid', 'shadow', winner && 'winner'].join(' ')}>\n        <div className=\"grid-header\">\n          <Logo winner={winner} />\n        </div>\n        {card.map((value, index) => {\n          let id = `cell${index + 1}`;\n          return (\n            <Cell\n              id={id}\n              className={[winner && 'winner'].join('')}\n              key={id}\n              index={index + 1}\n              checked={crossmarks[id]}\n              {...props}\n              disabled={winner}\n            >\n              {index !== 12 ? value : 'free'}\n            </Cell>\n          );\n        })}\n        <div className=\"serial\">{serial}</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useReducer } from 'react';\nimport {\n  Action,\n  PlayerState as State,\n  Card,\n  Results,\n  Gamestate,\n  Winner,\n  Host,\n  Room,\n  Gamemode,\n} from '@np-bingo/types';\nimport { BallContext, GameContext } from '../../Utils/contexts';\nimport {\n  BINGO,\n  INIT_CROSSMARKS,\n  INIT_GAME,\n  NEW_CARD,\n  UPDATE_CROSSMARKS,\n  WINNER_CROSSMARKS,\n} from '../../Constants';\nimport './style.css';\nimport Ball from '../../Components/Ball';\nimport Board from '../../Components/Board';\nimport StatusMessage from '../../Components/Status';\nimport { createCard, serializeCard } from '../../Utils/bingo';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Footer from '../../Components/Footer';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { initialState, reducer } from '../../Reducers/play.reducer';\nimport { initialState as appState } from '../../Reducers/app.reducer';\n\nexport interface PlayProps {\n  gamestate?: Gamestate;\n  winner?: Winner;\n  kicked?: boolean;\n  sendCard?: (mode: Gamemode, card: Card, room?: Room, host?: Host) => void;\n  leaveRoom?: (room: Room, host: Host) => void;\n  standby?: (mode: Gamemode) => void;\n  init?: () => void;\n}\n\nexport default function Play({\n  gamestate = 'init',\n  winner = { ...appState.winner },\n  kicked = false,\n  sendCard,\n  leaveRoom,\n  standby,\n  init,\n}: PlayProps) {\n  const [state, dispatch] = useReducer<(state: State, action: Action) => State>(\n    reducer,\n    initialState\n  );\n\n  /**\n   * Creates a new card and stores it in state\n   */\n  const newCard = useCallback(() => {\n    let card: Card = createCard(BINGO);\n    let serialCard = [...card];\n    let serial = serializeCard(serialCard);\n    dispatch({ type: NEW_CARD, payload: { card: card, serial: serial } });\n    clearCrossmarks();\n  }, []);\n\n  /**\n   * Sync Play gamestate with App gamestate\n   */\n  useEffect(() => {\n    // Syncing Player View with Host Game State.\n    if (gamestate === 'init') {\n      dispatch({ type: INIT_GAME });\n    }\n    if (gamestate === 'ready') {\n      newCard();\n    }\n  }, [gamestate, newCard]);\n\n  /**\n   * Toggle current target's crossmark visibility\n   * @param event Click event\n   */\n  const toggleCrossmark = (event: React.MouseEvent) => {\n    let target = event.target as HTMLDivElement;\n    let value = state.crossmarks[target.id];\n    let crossmark = { [target.id]: !value };\n\n    dispatch({ type: UPDATE_CROSSMARKS, payload: crossmark });\n  };\n\n  /**\n   * Resets all crossmarks\n   */\n  const clearCrossmarks = () => {\n    dispatch({ type: INIT_CROSSMARKS, payload: {} });\n  };\n\n  /**\n   * Sets Winning crossmarks after successful card validations\n   * @param methods Array of current winning methods (row, column, diagonal)\n   * @param data Results of validation check\n   */\n  const setWinningCrossmarks = (methods: string[], data: Results) => {\n    let winningCrossmarks = {};\n    let i;\n    for (i = 0; i < methods.length; i++) {\n      let marks = (data[methods[i]] as number[]).map(function (item) {\n        let id = `cell${item + 1}`;\n        return { [id]: true };\n      });\n      winningCrossmarks = Object.assign(winningCrossmarks, ...marks);\n    }\n\n    dispatch({ type: WINNER_CROSSMARKS, payload: winningCrossmarks });\n  };\n\n  /**\n   * Update winning results after successful validation\n   */\n  useEffect(() => {\n    if (winner.methods.length > 0) {\n      setWinningCrossmarks(winner.methods, winner.data);\n    }\n  }, [winner]);\n\n  const handleSendCard = (\n    mode: Gamemode,\n    card: Card,\n    room: Room,\n    host: Host\n  ) => {\n    if (sendCard) {\n      if (mode !== 'solo') {\n        sendCard(mode, card, room, host);\n      } else {\n        sendCard(mode, card);\n      }\n    }\n  };\n\n  let { card, serial, crossmarks } = state;\n  const board = [...card];\n  return (\n    <div className=\"Play\">\n      <header>\n        <GameContext.Consumer>\n          {(gameContext) => (\n            <React.Fragment>\n              <div className=\"app-buttons\">\n                <ButtonGroup\n                  variant=\"contained\"\n                  color=\"primary\"\n                  aria-label=\"contained primary button group\"\n                  size=\"large\"\n                >\n                  <Button\n                    className={`${\n                      gameContext.gamestate !== 'start' && 'disabled'\n                    }`} // TODO removed value.gamestate !== 'failure' on these??\n                    disabled={gameContext.gamestate !== 'start' && true}\n                    onClick={() =>\n                      handleSendCard(\n                        gameContext.mode,\n                        card,\n                        gameContext.room,\n                        gameContext.host\n                      )\n                    }\n                  >\n                    Bingo\n                  </Button>\n                  <Button\n                    className={`${\n                      gameContext.gamestate !== 'ready' && 'disabled'\n                    }`}\n                    disabled={gameContext.gamestate !== 'ready' && true}\n                    onClick={newCard}\n                  >\n                    New Card\n                  </Button>\n                  <Button\n                    className={`ready ${\n                      gameContext.gamestate !== 'ready' &&\n                      gameContext.gamestate !== 'failure' &&\n                      'disabled'\n                    }`}\n                    disabled={\n                      gameContext.gamestate !== 'ready' &&\n                      gameContext.gamestate !== 'failure' &&\n                      true\n                    }\n                    onClick={() => standby && standby(gameContext.mode)}\n                  >\n                    {gameContext.gamestate === 'failure' ? 'Resume' : 'Ready'}\n                  </Button>\n                </ButtonGroup>\n              </div>\n              <StatusMessage gamestate={gameContext.gamestate} />\n            </React.Fragment>\n          )}\n        </GameContext.Consumer>\n      </header>\n      <div className=\"main\" role=\"main\">\n        <GameContext.Consumer>\n          {(gameContext) => (\n            <React.Fragment>\n              <BallContext.Consumer>\n                {(ballContext) => (\n                  <div className=\"ball-wrapper\">\n                    <Ball\n                      number={ballContext.ball.number}\n                      column={ballContext.ball.column}\n                      remainder={ballContext.ball.remainder}\n                      loop={ballContext.loop}\n                      progress={ballContext.progress}\n                      disabled={\n                        gameContext.gamestate !== 'start' &&\n                        gameContext.gamestate !== 'failure' &&\n                        true\n                      }\n                    />\n                  </div>\n                )}\n              </BallContext.Consumer>\n            </React.Fragment>\n          )}\n        </GameContext.Consumer>\n        <Board\n          card={board}\n          serial={serial}\n          winner={winner.methods.length > 0 && true}\n          crossmarks={crossmarks}\n          onClick={toggleCrossmark}\n        />\n      </div>\n      <GameContext.Consumer>\n        {(gameContext) => (\n          <Footer\n            onClick={() =>\n              leaveRoom && leaveRoom(gameContext.room, gameContext.host)\n            }\n            room={gameContext.room}\n            mode={gameContext.mode}\n          />\n        )}\n      </GameContext.Consumer>\n      <Dialog\n        open={kicked}\n        onClose={init}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{'Leaving Room'}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You have been kicked from the room.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Link component={RouterLink} onClick={init} color=\"primary\" to=\"/\">\n            Leave Room\n          </Link>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '../../Components/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from '../../Utils/custom-hooks';\nimport { roomChar } from '@np-bingo/common';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport './style.css';\n\nexport interface DialogCodeProps {\n  open: boolean;\n  handleClose: () => void;\n  onSumbit?: (param?: any) => void;\n}\n\nconst initialState = {\n  code1: '',\n  code2: '',\n  code3: '',\n  code4: '',\n};\n\nexport default function DialogCode({\n  open = false,\n  handleClose,\n  onSumbit,\n}: DialogCodeProps) {\n  const [inputs, errors, handleChange, handleSubmit, handlePaste] = useForm(\n    initialState,\n    joinCallback\n  );\n\n  function joinCallback(formInputs: typeof inputs) {\n    let room = Object.values(formInputs).join('').toUpperCase();\n    onSumbit && onSumbit(room);\n  }\n\n  const handleChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // TODO event.persist()?\n    handleChange(event);\n\n    if (event.target.value.length < event.target.maxLength) {\n      if (event.target.previousSibling) {\n        let target = event.target.previousSibling as HTMLInputElement;\n        target.focus();\n      }\n    }\n\n    if (event.target.value.length === event.target.maxLength) {\n      if (event.target.nextSibling) {\n        let target = event.target.nextSibling as HTMLInputElement;\n        target.focus();\n      }\n    }\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"join-dialog-title\"\n      fullWidth={true}\n      maxWidth=\"xs\"\n    >\n      <DialogTitle id=\"join-dialog-title\" onClose={handleClose}>\n        Enter Room Code\n      </DialogTitle>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <DialogContent>\n          <DialogContentText>{errors && errors}</DialogContentText>\n          <fieldset className=\"code-input\">\n            {/* <label htmlFor=\"code-input\">Room Code</label> */}\n            <input\n              name=\"code1\"\n              type=\"text\"\n              pattern={roomChar}\n              maxLength={1}\n              className=\"partitioned\"\n              autoCapitalize=\"on\"\n              autoFocus\n              value={inputs.code1}\n              onPaste={(event) => handlePaste(event, 'code', 4)}\n              onChange={handleChangeText}\n              required\n            />\n            <input\n              name=\"code2\"\n              type=\"text\"\n              pattern={roomChar}\n              maxLength={1}\n              className=\"partitioned\"\n              autoCapitalize=\"on\"\n              value={inputs.code2}\n              onChange={handleChangeText}\n              required\n            />\n            <input\n              name=\"code3\"\n              type=\"text\"\n              pattern={roomChar}\n              maxLength={1}\n              className=\"partitioned\"\n              autoCapitalize=\"on\"\n              value={inputs.code3}\n              onChange={handleChangeText}\n              required\n            />\n            <input\n              name=\"code4\"\n              type=\"text\"\n              pattern={roomChar}\n              maxLength={1}\n              className=\"partitioned\"\n              autoCapitalize=\"on\"\n              value={inputs.code4}\n              onChange={handleChangeText}\n              required\n            />\n          </fieldset>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Join\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, Link as RouterLink } from 'react-router-dom';\nimport Logo from '../../Components/Logo';\nimport './style.css';\nimport { Room } from '@np-bingo/types';\nimport { useDialog } from '../../Utils/custom-hooks';\nimport DialogCode from '../../Components/DialogCode';\nimport { FeautresContext } from '../../Utils/contexts';\nimport Footer from '../../Components/Footer';\n\nexport interface HomeProps {\n  createRoom?: () => void;\n  joinRoom?: (room: Room) => void;\n}\n\nexport default function Home({ createRoom, joinRoom }: HomeProps) {\n  let history = useHistory();\n  const [open, handleOpen, handleClose] = useDialog(false);\n\n  function join(room: Room) {\n    joinRoom && joinRoom(room);\n    history.push(`/play?r=${room}`);\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"background\"></div>\n      <div className=\"Home\">\n        <header>\n          <Logo home={true} />\n        </header>\n        <div className=\"main\" role=\"main\">\n          <FeautresContext.Consumer>\n            {(features) => (\n              <Button\n                className=\"play-button\"\n                variant=\"contained\"\n                color=\"primary\"\n                component={\n                  !features['solo-mode'] && !features['public-rooms']\n                    ? 'button'\n                    : RouterLink\n                }\n                to={\n                  !features['solo-mode'] && !features['public-rooms']\n                    ? undefined\n                    : '/join'\n                }\n                onClick={\n                  !features['solo-mode'] && !features['public-rooms']\n                    ? handleOpen\n                    : undefined\n                }\n                size=\"large\"\n              >\n                Play\n              </Button>\n            )}\n          </FeautresContext.Consumer>\n          <Button color=\"primary\" onClick={createRoom} size=\"large\">\n            Host\n          </Button>\n        </div>\n        <Footer home={true} />\n        <DialogCode open={open} handleClose={handleClose} onSumbit={join} />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Typography from '@material-ui/core/Typography';\nimport './style.css';\n\nexport interface ListProps {\n  data?: any[];\n  action?: (param?: any) => void;\n}\n\nexport interface RoomListProps extends ListProps {\n  action?: (room: string) => void;\n}\n\nexport default function RoomList({ data = [], action: onJoin }: RoomListProps) {\n  return (\n    <div className=\"room-list\">\n      {/* <Typography variant=\"h5\">Public Rooms</Typography> */}\n      {data.length !== 0 ? (\n        <List>\n          {data.map((value) => {\n            return (\n              <ListItem key={value.room}>\n                <ListItemAvatar>\n                  <Avatar>{value.players.length}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={value.room}\n                  secondary={value.host.name}\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"play\"\n                    component={RouterLink}\n                    to={`/play/${value.room}`} // TODO Will go even if Room doesn't exist\n                    onClick={onJoin && (() => onJoin(value.room))}\n                  >\n                    <ExitToAppIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <Typography>No rooms found</Typography>\n      )}\n    </div>\n  );\n}\n","import { useCallback, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { Gamestate, Room } from '@np-bingo/types';\nimport { useDialog } from '../../Utils/custom-hooks';\nimport RoomList from '../../Components/RoomList';\nimport DialogCode from '../../Components/DialogCode';\nimport './style.css';\nimport { FeautresContext } from '../../Utils/contexts';\n\nexport interface JoinProps {\n  queryRoom: string | null;\n  joinRoom?: (room: string) => void;\n  solo?: (gamestate: Gamestate) => void;\n}\n\nexport default function Join({ queryRoom = null, joinRoom, solo }: JoinProps) {\n  let history = useHistory();\n  const [open, handleOpen, handleClose] = useDialog(false);\n\n  const join = useCallback(\n    (room: Room) => {\n      joinRoom && joinRoom(room);\n      history.push(`/play?r=${room}`);\n    },\n    [history, joinRoom]\n  );\n\n  useEffect(() => {\n    if (queryRoom !== null) {\n      // TODO Check if room is active\n      join(queryRoom);\n    }\n  }, [queryRoom, join]);\n\n  const handleSolo = () => {\n    solo && solo('init');\n    history.push(`/play?m=solo`);\n  };\n\n  // TODO replace with Public Room Implementation\n  const dummyArray = [\n    {\n      _id: 'dadkjashdjshadka',\n      room: 'NYPD',\n      host: { id: 1100, name: 'Siz Fulker' },\n      players: [1111, 1122, 1133, 1144, 1155, 1121, 1112, 1114],\n    },\n    {\n      _id: 'dadkjashdjshadka',\n      room: 'TEST',\n      host: { id: 1100, name: 'Dean Watson' },\n      players: [1111, 1122, 1133, 1144, 1155],\n    },\n    {\n      _id: 'dadkjashdjshadka',\n      room: 'ABCD',\n      host: { id: 1100, name: 'Manny McDaniels' },\n      players: [1111],\n    },\n  ];\n\n  return (\n    <div className=\"Join\">\n      <header>\n        <Typography variant=\"h4\">Join</Typography>\n      </header>\n      <FeautresContext.Consumer>\n        {(features) => (\n          <div className=\"main\" role=\"main\">\n            {features['public-rooms'] && (\n              <RoomList data={dummyArray} action={joinRoom} />\n            )}\n            <Button\n              className=\"join-button\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleOpen}\n              size=\"large\"\n            >\n              Join Room\n            </Button>\n            {features['solo-mode'] && (\n              <Button\n                className=\"solo-button\"\n                color=\"primary\"\n                onClick={handleSolo}\n                size=\"large\"\n              >\n                Solo\n              </Button>\n            )}\n          </div>\n        )}\n      </FeautresContext.Consumer>\n      <footer>\n        <Link className=\"nav-button\" component={RouterLink} to=\"/\">\n          &larr; Back\n        </Link>\n      </footer>\n      <DialogCode open={open} handleClose={handleClose} onSumbit={join} />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './style.css';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport { useTitle } from '../../Utils/custom-hooks';\n\nexport interface CreateProps {\n  title?: string;\n}\n\nexport default function Create({ title }: CreateProps) {\n  useTitle(title && title);\n\n  const [type, setType] = useState('default');\n  const [state, setState] = useState({\n    postage: false,\n    corners: false,\n    rovingl: false,\n    visible: false,\n  });\n\n  const handleRadio = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setType((event.target as HTMLInputElement).value);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const { postage, corners, rovingl, visible } = state;\n\n  return (\n    <div className=\"Create\">\n      <header>\n        <Typography variant=\"h4\" component=\"h1\">\n          Create\n        </Typography>\n      </header>\n      <div className=\"main\" role=\"main\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Game Type</FormLabel>\n          <RadioGroup\n            aria-label=\"gametype\"\n            name=\"gametype1\"\n            value={type}\n            onChange={handleRadio}\n          >\n            <FormControlLabel\n              value=\"default\"\n              control={<Radio />}\n              label=\"Bingo\"\n            />\n            <FormControlLabel\n              value=\"housey\"\n              disabled\n              control={<Radio />}\n              label=\"Housey-Housey\"\n            />\n            <FormControlLabel\n              value=\"death\"\n              disabled\n              control={<Radio />}\n              label=\"Death Bingo\"\n            />\n            <FormControlLabel\n              value=\"blackout\"\n              disabled\n              control={<Radio />}\n              label=\"Blackout Bingo\"\n            />\n          </RadioGroup>\n        </FormControl>\n        {(type === 'default' || type === 'housey') && (\n          <React.Fragment>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Special Rules</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={postage}\n                      onChange={handleChange}\n                      name=\"postage\"\n                    />\n                  }\n                  label=\"Postage Stamp\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={corners}\n                      onChange={handleChange}\n                      name=\"corners\"\n                    />\n                  }\n                  label=\"Corners\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={rovingl}\n                      onChange={handleChange}\n                      name=\"rovingl\"\n                    />\n                  }\n                  label=\"Roving L\"\n                />\n              </FormGroup>\n              <FormHelperText>Optional</FormHelperText>\n            </FormControl>\n          </React.Fragment>\n        )}\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Visibility</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={visible}\n                  onChange={handleChange}\n                  name=\"visible\"\n                />\n              }\n              label=\"Public\"\n            />\n          </FormGroup>\n        </FormControl>\n        <Button color=\"primary\" variant=\"contained\">\n          Create Room\n        </Button>\n      </div>\n      <footer>\n        <Link className=\"nav-button\" component={RouterLink} to=\"/\">\n          &larr; Back\n        </Link>\n      </footer>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: process.env.SERVER || 'http://localhost:8082/',\n});\n\nexport default instance;\n","import { AxiosResponse } from 'axios';\nimport axios from '../Config/axios';\nimport { Player, Room, Winner } from '@np-bingo/types';\nimport { handleError } from '../Utils';\n\n/**\n * Create game room on server\n * @param body\n * @param callback\n */\nexport async function apiCreateRoom(\n  body: any,\n  callback: (res: AxiosResponse) => void\n) {\n  await axios\n    .post('/api/game', body)\n    .then((res) => {\n      callback(res);\n    })\n    .catch((err) => {\n      console.log('Error in Create Room');\n      handleError(err);\n    });\n}\n\n/**\n * Update game room with player information\n * @param room Room code\n * @param body Player\n * @param callback\n */\nexport async function apiUpdateRoom(\n  room: Room,\n  body: Player,\n  callback: (res: AxiosResponse) => void\n) {\n  axios\n    .put(`/api/game/join/${room}`, body)\n    .then((res) => {\n      callback(res);\n    })\n    .catch((err) => {\n      console.log('Error in Join Room');\n      handleError(err);\n    });\n}\n\n/**\n * Update game with winner\n * @param room Room code\n * @param body Winner\n */\nexport async function apiSaveRoom(room: Room, body: Winner) {\n  await axios\n    .put(`/api/game/${room}`, body)\n    .then(() => {\n      console.log('Saving room');\n    })\n    .catch((err) => {\n      console.log('Error in Save Room');\n      handleError(err);\n    });\n}\n\n/**\n * Delete room from server (if no players have joined)\n * @param room\n */\nexport async function apiDeleteRoom(room: Room) {\n  await axios\n    .delete(`/api/game/${room}`)\n    .then(() => {\n      console.log('Leaving room');\n    })\n    .catch((err) => {\n      console.log('Error in Close Room');\n      handleError(err);\n    });\n}\n","import React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport socket from './Config/socket.io';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport './App.css';\nimport {\n  INIT_GAME,\n  READY_CHECK,\n  START_GAME,\n  END_GAME,\n  CHECK_CARD_SUCCESS,\n  NEW_BALL,\n  STANDBY,\n  VALIDATE,\n  GET_CARD,\n  FAILURE,\n  SET_ROOM,\n  JOIN_ROOM,\n  PLAYER_JOINED,\n  PLAYER_LEFT,\n  PLAYER_READY,\n  SET_BALL,\n  PLAYER_KICKED,\n  PLAYER_UNREADY,\n  PAUSE,\n  CHECK_CARD_FAILURE,\n  WIN_GAME,\n  UPDATE_GAMEMODE,\n  LOOP_START,\n  LOOP_STOP,\n} from './Constants';\nimport { getBall, removeBall, validateCard } from './Utils/bingo';\nimport {\n  Action,\n  AppState as State,\n  Ball,\n  Card,\n  Pool,\n  Results,\n  Gamestate,\n  Winner,\n  Player,\n  PlayerCard,\n  Room,\n  Host as RoomHost,\n  Gamemode,\n} from '@np-bingo/types';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Host from './Views/Host';\nimport Play from './Views/Play';\nimport Home from './Views/Home';\nimport Join from './Views/Join';\nimport Create from './Views/Create';\nimport { initialState, reducer } from './Reducers/app.reducer';\nimport {\n  apiCreateRoom,\n  apiDeleteRoom,\n  apiSaveRoom,\n  apiUpdateRoom,\n} from './Api';\nimport { useQuery } from './Utils/custom-hooks';\nimport config from './Config/features';\nimport { GameContext, BallContext } from './Utils/contexts';\nimport logger from 'use-reducer-logger';\nimport Container from '@material-ui/core/Container';\nimport features from './Config/features';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: features['dark-mode'] ? 'dark' : 'light',\n  },\n});\n\nexport default function App() {\n  let history = useHistory();\n  let query = useQuery();\n  const [state, dispatch] = useReducer<(state: State, action: Action) => State>(\n    process.env.NODE_ENV === 'development' ? logger(reducer) : reducer,\n    initialState\n  );\n\n  // User\n  const [user, setUser] = useState<Player>({\n    name: 'Player',\n    socket: '',\n  });\n  // TODO where does this belong?\n  const [progress, setProgress] = useState(0);\n\n  /**\n   * Manage game state\n   * @param gamestate\n   */\n  const play = useCallback((gamestate: Gamestate) => {\n    switch (gamestate) {\n      case 'init':\n        dispatch({ type: INIT_GAME });\n        break;\n      case 'ready':\n        dispatch({ type: READY_CHECK });\n        break;\n      case 'standby':\n        dispatch({ type: STANDBY });\n        break;\n      case 'start':\n        dispatch({ type: START_GAME });\n        break;\n      case 'validate':\n        dispatch({ type: VALIDATE });\n        break;\n      case 'pause':\n        dispatch({ type: PAUSE });\n        break;\n      case 'failure':\n        dispatch({ type: FAILURE });\n        break;\n      case 'win':\n        dispatch({ type: WIN_GAME });\n        break;\n      case 'end':\n        dispatch({ type: END_GAME });\n        break;\n      default:\n        throw new Error('Invalid game state.');\n    }\n  }, []);\n\n  /**\n   * Player: Set standby\n   */\n  const standby = (mode: Gamemode) => {\n    play('standby');\n\n    mode !== 'solo'\n      ? socket.emit('ready-up', state.host.socket, user)\n      : solo('standby');\n  };\n\n  /**\n   * Host: Start game\n   * @param room\n   * @param mode\n   */\n  const start = (room: Room) => {\n    play('start');\n    socket.emit('start', room);\n  };\n\n  /**\n   * Host: Three way toggle for main button\n   * @param gamestate Gamestate\n   * @param room Room\n   */\n  const gameToggle = (gamestate: Gamestate, room: Room) => {\n    switch (gamestate) {\n      case 'ready':\n        play('standby');\n        socket.emit('standby', room);\n        break;\n      case 'end':\n        play('ready');\n        socket.emit('ready', room);\n        break;\n      default:\n        dispatch({ type: PLAYER_UNREADY });\n        play('end');\n        socket.emit('end', room);\n        break;\n    }\n  };\n\n  /**\n   * Update game mode\n   * @param gamemode\n   */\n  const mode = (gamemode: Gamemode) => {\n    switch (gamemode) {\n      case 'default':\n        dispatch({ type: UPDATE_GAMEMODE, payload: 'default' });\n        break;\n      case 'solo':\n        dispatch({ type: UPDATE_GAMEMODE, payload: 'solo' });\n        break;\n      case 'death':\n        dispatch({ type: UPDATE_GAMEMODE, payload: 'death' });\n        break;\n      case 'blackout':\n        dispatch({ type: UPDATE_GAMEMODE, payload: 'blackout' });\n        break;\n      default:\n        throw new Error('Invalid game mode.');\n    }\n  };\n\n  /**\n   * Socket.io Side-effects\n   * // TODO this might need to be split into seperate subscriptions\n   */\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('User connected');\n      setUser((prevUser) => ({ ...prevUser, socket: socket.id }));\n    });\n    /**\n     * To Host: Player joined\n     * @param player Player\n     */\n    socket.on('player-joined', (player: Player) => {\n      console.log(`${player.name} joined`);\n      dispatch({ type: PLAYER_JOINED, payload: player });\n    });\n\n    /**\n     * To Host: Player left\n     * @param player Player\n     */\n    socket.on('player-left', (player: Player) => {\n      console.log(`${player.name} left`);\n      dispatch({ type: PLAYER_LEFT, payload: player });\n    });\n\n    /**\n     * To Player: Host left\n     */\n    // TODO Dialog when host leaves\n\n    /**\n     * To Player: Removed from game\n     */\n    socket.on('player-remove', () => {\n      console.log(`You have been removed from the room`);\n      dispatch({ type: PLAYER_KICKED, payload: true });\n    });\n\n    /**\n     * To Host: Player is ready\n     * @param player Player\n     */\n    socket.on('player-ready', (player: Player) => {\n      console.log(`${player.name} ready`);\n      dispatch({ type: PLAYER_READY, payload: player });\n    });\n\n    /**\n     * To Room: Ready check\n     */\n    socket.on('game-ready', () => {\n      console.log('Pick a card');\n      play('ready');\n    });\n\n    /**\n     * To Room: Standby for first ball\n     */\n    socket.on('game-standby', () => {\n      console.log('Game starting shortly...');\n      play('standby');\n    });\n\n    /**\n     * To Room: Game start\n     */\n    socket.on('game-start', () => {\n      console.log('Game started');\n      play('start');\n    });\n\n    /**\n     * To Room: Ball Dispensed\n     * @param ball Ball\n     */\n    socket.on('game-ball', (ball: Ball) => {\n      console.log(`Ball: ${ball.column.toUpperCase()}${ball.number}`);\n      dispatch({ type: SET_BALL, payload: ball });\n    });\n\n    /**\n     * To Host: Receive Card\n     * @param room Room\n     * @param player Player\n     * @param card Card\n     */\n    socket.on('receive-card', (room: Room, player: Player, card: Card) => {\n      console.log(`${player.name} sent a card to you.`);\n      play('validate');\n      socket.emit('checking-card', room);\n      dispatch({ type: GET_CARD, payload: { card: card, owner: player } });\n    });\n\n    /**\n     * To Room: Notify a card is being checked\n     */\n    socket.on('game-validation', () => {\n      console.log(\n        `A card has been sent to the host. Checking if it's a winner!`\n      );\n      play('pause');\n    });\n\n    /**\n     * To Player: Winner\n     * @param winner Winner\n     */\n    socket.on('winner', (room: Room, winner: Winner) => {\n      console.log(`You won the game!`);\n\n      socket.emit('win', room, winner.player.name);\n\n      dispatch({\n        type: CHECK_CARD_SUCCESS,\n        payload: winner,\n      });\n    });\n\n    /**\n     * To Room: Broadcast Winner\n     * @param username string\n     */\n    socket.on('game-win', (username) => {\n      console.log(`${username} won the game!`);\n      // TODO Show winner name on win ?\n      // play('win');\n    });\n\n    /**\n     * To Room: Continue\n     */\n    socket.on('game-continue', () => {\n      console.log('Not a winner...');\n      play('start');\n    });\n\n    /**\n     * To Room: Game End\n     */\n    socket.on('game-end', () => {\n      console.log('Game over!');\n      play('end');\n    });\n  }, [play]);\n\n  /**\n   * Host: Create a new game room\n   */\n  const createRoom = () => {\n    play('ready');\n\n    apiCreateRoom(user, (res) => {\n      dispatch({\n        type: SET_ROOM,\n        payload: { room: res.data.game.room, host: res.data.game.host },\n      });\n\n      socket.emit('create-room', res.data.game.room);\n\n      history.push(`/host?r=${res.data.game.room}`);\n    });\n  };\n\n  /**\n   * Player: Join game by room code\n   * @param room Room code\n   */\n  const joinRoom = (room: string) => {\n    play('ready');\n\n    apiUpdateRoom(room, user, (res) => {\n      socket.emit('join-room', room, res.data.host.socket, user);\n\n      dispatch({\n        type: JOIN_ROOM,\n        payload: { room: room, host: res.data.host },\n      });\n    });\n  };\n\n  /**\n   * Leave room by room code\n   * @param room Room code\n   * @param host Room host (required if player)\n   */\n  const leaveRoom = (room: string, host?: RoomHost) => {\n    play('init');\n\n    if (host) {\n      // Player\n      socket.emit('leave-room', room, host.socket, user);\n    } else {\n      // Host\n      // TODO Tell room host left and kick players\n      socket.emit('leave-room', room);\n\n      apiDeleteRoom(room);\n    }\n  };\n\n  /**\n   * Remove player from room\n   * @param player Player socket id\n   */\n  const removePlayer = (player: Player) => {\n    socket.emit('remove-player', player);\n    dispatch({ type: PLAYER_LEFT, payload: player });\n  };\n\n  /**\n   * Retrieve a new Bingo ball from the remaining pool of balls.\n   * Returns undefined if pool is empty.\n   * @param mode\n   * @param pool\n   * @param draws\n   * @param room (Optional)\n   */\n  const newBall = useCallback(\n    (\n      mode: Gamemode,\n      pool: Pool,\n      draws: Pool,\n      room?: Room,\n      callback?: (...args: any[]) => void\n    ) => {\n      let poolArray = [...pool];\n      let drawsArray = [...draws];\n      let ball = getBall(pool);\n\n      if (ball.number !== 0) {\n        poolArray = removeBall(pool, ball);\n        drawsArray[ball.key].push(ball.number);\n      }\n\n      dispatch({\n        type: NEW_BALL,\n        payload: {\n          ball: ball,\n          draws: drawsArray,\n          pool: poolArray,\n        },\n      });\n      mode !== 'solo' && room && socket.emit('ball', room, ball);\n\n      if (ball.remainder === 0) {\n        play('end');\n        mode !== 'solo' && room && socket.emit('end', room);\n      }\n\n      callback && callback(ball);\n    },\n    [play]\n  );\n\n  /**\n   * Solo mode progress bar animation\n   */\n  useEffect(() => {\n    if (state.loop && state.gamestate === 'start') {\n      const timer = setInterval(() => {\n        setProgress((prevProgress) =>\n          prevProgress >= 100 ? 100 : prevProgress + 9.17\n        );\n      }, config['ball-delay'] / 12);\n      return () => clearInterval(timer);\n    }\n  }, [state.gamestate, state.loop, progress]);\n\n  /**\n   * Solo mode new ball delay and animation reset\n   */\n  useEffect(() => {\n    if (state.loop && state.ball.remainder !== 0) {\n      const timeout = setTimeout(() => {\n        newBall('solo', state.pool, state.draws, undefined, (ball: Ball) => {\n          setProgress(0);\n          console.log(`Ball: ${ball.column.toUpperCase()}${ball.number}`);\n          if (ball.remainder === 0) {\n            dispatch({ type: LOOP_STOP });\n            console.log('Game over');\n          }\n        });\n      }, config['ball-delay']);\n      return () => clearTimeout(timeout);\n    }\n  }, [newBall, state.ball.remainder, state.loop, state.draws, state.pool]);\n\n  /**\n   * Player: Send card to host\n   * @param mode\n   * @param card\n   * @param room\n   * @param host\n   */\n  const sendCard = (\n    mode: Gamemode,\n    card: Card,\n    room?: Room,\n    host?: RoomHost\n  ) => {\n    if (mode !== 'solo') {\n      play('validate');\n      room && host && socket.emit('send-card', room, host.socket, user, card);\n    } else {\n      dispatch({ type: GET_CARD, payload: { card: card, owner: user } });\n      solo('validate');\n    }\n  };\n\n  /**\n   * Checks if input card is a winner\n   * @param mode Game mdoe\n   * @param playerCard Input card to be checked and owner of card\n   * @param draws Pool of bingo balls that have already been drawn\n   * @param room Room code\n   */\n  const checkCard = (\n    mode: Gamemode,\n    playerCard: PlayerCard,\n    draws: Pool,\n    room?: Room\n  ) => {\n    // TODO Add rulesets\n    let data: Results = validateCard(playerCard.card, draws);\n\n    const methods = Object.keys(data).filter(function (items) {\n      return data[items];\n    });\n\n    if (methods.length > 0) {\n      let winner = {\n        methods: methods,\n        data: data,\n        player: playerCard.owner,\n        card: playerCard.card,\n      };\n\n      dispatch({\n        type: CHECK_CARD_SUCCESS,\n        payload: winner,\n      });\n      if (mode !== 'solo' && room) {\n        socket.emit('winning-card', room, winner);\n        apiSaveRoom(room, winner);\n      }\n    } else {\n      dispatch({ type: CHECK_CARD_FAILURE });\n      mode !== 'solo' && room && socket.emit('losing-card', room);\n    }\n  };\n\n  const solo = useCallback(\n    (gamestate: Gamestate) => {\n      switch (gamestate) {\n        case 'init':\n          mode('solo');\n          play('ready');\n          break;\n        case 'standby':\n          play('start');\n          dispatch({ type: LOOP_START });\n          break;\n        case 'validate':\n          play('validate');\n          dispatch({ type: LOOP_STOP });\n          break;\n        case 'pause':\n          play('pause');\n          // TODO Pulling directly from state feels wrong\n          checkCard(state.rules.mode, state.playerCard, state.draws);\n          break;\n        default:\n          throw new Error('Invalid game state in solo.');\n      }\n    },\n    [play, state.draws, state.playerCard, state.rules.mode]\n  );\n\n  /**\n   * Pause solo mode loop on validate\n   */\n  useEffect(() => {\n    if (!state.loop && state.gamestate === 'validate') {\n      const pauseTime = setTimeout(() => {\n        solo('pause');\n        setProgress(0);\n      }, 1000);\n      return () => clearTimeout(pauseTime);\n    }\n  }, [solo, state.loop, state.gamestate]);\n\n  let {\n    gamestate,\n    ball,\n    draws,\n    pool,\n    playerCard,\n    winner,\n    room,\n    players,\n    kicked,\n    host,\n    rules,\n    loop,\n  } = state;\n\n  let gameContext = {\n    gamestate: gamestate,\n    room: room,\n    host: host,\n    mode: rules.mode,\n  };\n  let ballContext = { ball: ball, loop: loop, progress: progress };\n\n  return (\n    <GameContext.Provider value={gameContext}>\n      <BallContext.Provider value={ballContext}>\n        <ThemeProvider theme={theme}>\n          <Container className=\"App shadow\" fixed maxWidth=\"xs\">\n            <Switch>\n              <Route path=\"/create\">\n                <Create></Create>\n              </Route>\n              <Route path=\"/host\">\n                <Host\n                  checkCard={() =>\n                    checkCard(rules.mode, playerCard, draws, room)\n                  }\n                  newBall={() => newBall(rules.mode, pool, draws, room)}\n                  draws={draws}\n                  leaveRoom={leaveRoom}\n                  players={players}\n                  gameToggle={gameToggle}\n                  removePlayer={removePlayer}\n                  start={start}\n                ></Host>\n              </Route>\n              <Route path=\"/join\">\n                <Join\n                  joinRoom={joinRoom}\n                  queryRoom={query.get('r')}\n                  solo={solo}\n                />\n              </Route>\n              <Route path=\"/play\">\n                <Play\n                  gamestate={gamestate}\n                  init={() => play('init')}\n                  standby={standby}\n                  leaveRoom={leaveRoom}\n                  kicked={kicked}\n                  sendCard={sendCard}\n                  winner={winner}\n                ></Play>\n              </Route>\n              <Route exact path=\"/\">\n                <Home joinRoom={joinRoom} createRoom={createRoom} />\n              </Route>\n            </Switch>\n          </Container>\n        </ThemeProvider>\n      </BallContext.Provider>\n    </GameContext.Provider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { FeautresContext } from './Utils/contexts';\nimport features from './Config/features';\nimport dotenv from 'dotenv';\ndotenv.config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <FeautresContext.Provider value={features}>\n        <App />\n      </FeautresContext.Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.roomRegex = exports.roomPattern = exports.roomChar = exports.makeID = void 0;\n/**\n * Creates an id\n * @param length String length of id\n * @returns\n */\nfunction makeID(length) {\n    var i;\n    var result = '';\n    // exclude: I, O, 0\n    var characters = 'ABCDEFGHJKLMNPQRSTUVWXYZ123456789';\n    for (i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return result;\n}\nexports.makeID = makeID;\nexports.roomChar = '[A-HJ-NP-Z1-9]';\nexports.roomPattern = exports.roomChar + \"{4}\";\nexports.roomRegex = new RegExp(exports.roomPattern);\n"],"sourceRoot":""}